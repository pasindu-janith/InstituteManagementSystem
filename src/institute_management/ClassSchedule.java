/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package institute_management;

import com.institute.db.DB;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pasindu hathurushigh
 */
public class ClassSchedule extends javax.swing.JFrame {
    private Design design;
    /**
     * Creates new form ClassSchedule
     */
    public ClassSchedule() {
        initComponents();
        loadSubject();
        loadTeachers();
        design.tableDesign(jTable2);
        this.setIconImage(design.getIconImage());
    }
    {
        design = new Design();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        combo_subject = new javax.swing.JComboBox<>();
        combo_teacher = new javax.swing.JComboBox<>();
        check_6 = new javax.swing.JCheckBox();
        check_7 = new javax.swing.JCheckBox();
        check_8 = new javax.swing.JCheckBox();
        check_9 = new javax.swing.JCheckBox();
        check_10 = new javax.swing.JCheckBox();
        check_11 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        starttime = new lu.tudor.santec.jtimechooser.JTimeChooser();
        endtime = new lu.tudor.santec.jtimechooser.JTimeChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        check_sunday = new javax.swing.JCheckBox();
        check_monday = new javax.swing.JCheckBox();
        check_tuesday = new javax.swing.JCheckBox();
        check_wednesday = new javax.swing.JCheckBox();
        check_friday = new javax.swing.JCheckBox();
        check_saturday = new javax.swing.JCheckBox();
        check_thursday = new javax.swing.JCheckBox();
        rad_clsdetail = new javax.swing.JRadioButton();
        rad_timerange = new javax.swing.JRadioButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Class Schedule");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("     CLASS SCHEDULE");
        jLabel1.setOpaque(true);

        jCalendar1.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Class Day");

        jButton1.setBackground(new java.awt.Color(0, 102, 153));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Show Class");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusPainted(false);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class code", "Grade", "Subject", "Class Type", "Teacher", "Class Day", "Start time", "Endtime", "Hall", "Fee"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setRowHeight(18);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(10);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
            jTable2.getColumnModel().getColumn(6).setResizable(false);
            jTable2.getColumnModel().getColumn(6).setPreferredWidth(20);
            jTable2.getColumnModel().getColumn(7).setResizable(false);
            jTable2.getColumnModel().getColumn(7).setPreferredWidth(20);
            jTable2.getColumnModel().getColumn(8).setResizable(false);
            jTable2.getColumnModel().getColumn(8).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(9).setResizable(false);
            jTable2.getColumnModel().getColumn(9).setPreferredWidth(30);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select By Class Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 13))); // NOI18N

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Subject");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Teacher");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Grade");

        combo_subject.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        combo_subject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_subjectActionPerformed(evt);
            }
        });

        combo_teacher.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        combo_teacher.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        check_6.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_6.setText("6");
        check_6.setFocusPainted(false);

        check_7.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_7.setText("7");
        check_7.setFocusPainted(false);

        check_8.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_8.setText("8");
        check_8.setFocusPainted(false);

        check_9.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_9.setText("9");
        check_9.setFocusPainted(false);

        check_10.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_10.setText("10");
        check_10.setFocusPainted(false);

        check_11.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_11.setText("11");
        check_11.setFocusPainted(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(combo_teacher, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(combo_subject, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(27, 27, 27)
                        .addComponent(check_6)
                        .addGap(18, 18, 18)
                        .addComponent(check_7)
                        .addGap(18, 18, 18)
                        .addComponent(check_8)
                        .addGap(18, 18, 18)
                        .addComponent(check_9)
                        .addGap(18, 18, 18)
                        .addComponent(check_10)
                        .addGap(18, 18, 18)
                        .addComponent(check_11)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(combo_subject, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(combo_teacher, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(check_6)
                    .addComponent(check_7)
                    .addComponent(check_8)
                    .addComponent(check_9)
                    .addComponent(check_10)
                    .addComponent(check_11))
                .addGap(20, 20, 20))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select By Class Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 13))); // NOI18N

        starttime.setShowSeconds(false);

        endtime.setShowSeconds(false);

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("From");

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setText("To");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(starttime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(endtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(endtime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(starttime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel6.setText("Search Filters");

        check_sunday.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_sunday.setText("Sunday");
        check_sunday.setContentAreaFilled(false);
        check_sunday.setFocusPainted(false);

        check_monday.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_monday.setText("Monday");
        check_monday.setContentAreaFilled(false);
        check_monday.setFocusPainted(false);

        check_tuesday.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_tuesday.setText("Tuesday");
        check_tuesday.setContentAreaFilled(false);
        check_tuesday.setFocusPainted(false);

        check_wednesday.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_wednesday.setText("Wednesday");
        check_wednesday.setContentAreaFilled(false);
        check_wednesday.setFocusPainted(false);

        check_friday.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_friday.setText("Friday");
        check_friday.setContentAreaFilled(false);
        check_friday.setFocusPainted(false);

        check_saturday.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_saturday.setText("Saturday");
        check_saturday.setContentAreaFilled(false);
        check_saturday.setFocusPainted(false);

        check_thursday.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        check_thursday.setText("Thursday");
        check_thursday.setContentAreaFilled(false);
        check_thursday.setFocusPainted(false);

        buttonGroup1.add(rad_clsdetail);
        rad_clsdetail.setSelected(true);
        rad_clsdetail.setContentAreaFilled(false);
        rad_clsdetail.setFocusPainted(false);

        buttonGroup1.add(rad_timerange);
        rad_timerange.setContentAreaFilled(false);
        rad_timerange.setFocusPainted(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel2)
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(check_thursday)
                                        .addGap(18, 18, 18)
                                        .addComponent(check_friday)
                                        .addGap(29, 29, 29)
                                        .addComponent(check_saturday))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(check_sunday)
                                        .addGap(18, 18, 18)
                                        .addComponent(check_monday)
                                        .addGap(18, 18, 18)
                                        .addComponent(check_tuesday)
                                        .addGap(32, 32, 32)
                                        .addComponent(check_wednesday))))
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rad_clsdetail)
                                    .addComponent(rad_timerange, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCalendar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE))
                        .addGap(56, 56, 56))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1150, Short.MAX_VALUE)
                        .addGap(43, 43, 43))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(check_sunday)
                            .addComponent(check_monday)
                            .addComponent(check_tuesday)
                            .addComponent(check_wednesday))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(check_friday)
                            .addComponent(check_saturday)
                            .addComponent(check_thursday))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rad_clsdetail))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rad_timerange)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        StringBuffer grade = new StringBuffer("");
        if (check_6.isSelected()) {
            grade.append(",'6'");
        }
        if (check_7.isSelected()) {
            grade.append(",'7'");
        }
        if (check_8.isSelected()) {
            grade.append(",'8'");
        }
        if (check_9.isSelected()) {
            grade.append(",'9'");
        }
        if (check_10.isSelected()) {
            grade.append(",'10'");
        }
        if (check_11.isSelected()) {
            grade.append(",'11'");
        }

        StringBuffer classday = new StringBuffer("");
        if (check_sunday.isSelected()) {
            classday.append(",'SUNDAY'");
        }
        if (check_monday.isSelected()) {
            classday.append(",'MONDAY'");
        }
        if (check_tuesday.isSelected()) {
            classday.append(",'TUESDAY'");
        }
        if (check_wednesday.isSelected()) {
            classday.append(",'WEDNESDAY'");
        }
        if (check_thursday.isSelected()) {
            classday.append(",'THURSDAY'");
        }
        if (check_friday.isSelected()) {
            classday.append(",'FRIDAY'");
        }
        if (check_saturday.isSelected()) {
            classday.append(",'SATURDAY'");
        }

        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
            dtm.setRowCount(0);
            if (rad_clsdetail.isSelected()) {
                if (!classday.toString().equals("") && !grade.toString().equals("")) {
                    grade.deleteCharAt(0);
                    grade.insert(0, "(").append(")");
                    classday.deleteCharAt(0);
                    classday.insert(0, "(").append(")");
                    ResultSet rs = DB.search("SELECT * FROM class c "
                            + "INNER JOIN classtype ct ON c.`classtype`=ct.`id` "
                            + "INNER JOIN hall h ON c.`hall`=h.`hallno` "
                            + "WHERE grade IN " + grade.toString() + " AND `subject`='"
                            + combo_subject.getSelectedItem().toString().split("-")[0] + "' AND `classday` IN "
                            + classday + " AND `teacher`='"
                            + combo_teacher.getSelectedItem().toString().split("-")[0] + "' AND `status`='1'"
                                    + " ORDER BY `grade` ASC");
                    while (rs.next()) {
                        Vector v = new Vector();
                        v.add(rs.getString("classcode"));
                        v.add(rs.getString("c.grade"));
                        v.add(combo_subject.getSelectedItem().toString().split("-")[1]);
                        v.add(rs.getString("ct.type"));
                        v.add(combo_teacher.getSelectedItem().toString().split("-")[1]);
                        v.add(rs.getString("c.classday"));
                        v.add(rs.getString("starttime").substring(0, 5));
                        v.add(rs.getString("endtime").substring(0, 5));
                        v.add(rs.getString("h.hallname"));
                        v.add(rs.getString("c.fee"));
                        dtm.addRow(v);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Select grades and class days", "", 
                            JOptionPane.WARNING_MESSAGE, design.getWarningIcon());
                }
            } else if (rad_timerange.isSelected()) {
                if (!classday.toString().equals("")) {
                    classday.deleteCharAt(0);
                    classday.insert(0, "(").append(")");
                    ResultSet rs = DB.search("SELECT `classcode` FROM class "
                            + "WHERE `classday` IN " + classday + " AND ('"
                            + starttime.getFormatedTime() + "' BETWEEN `starttime` AND `endtime` OR '"
                            + endtime.getFormatedTime() + "' BETWEEN `starttime` AND `endtime`"
                                    + " OR `starttime` BETWEEN '"
                            + starttime.getFormatedTime() + "' AND '"
                            + endtime.getFormatedTime() + "') AND `status`='1'");

                    while (rs.next()) {
                        Vector v = new Vector();
                        ResultSet rs_second = DB.search("SELECT * FROM class c "
                                + "INNER JOIN teacher t ON c.`teacher`=t.`nic` "
                                + "INNER JOIN subject s ON c.`subject`=s.`id` "
                                + "INNER JOIN classtype ct ON ct.`id`=c.`classtype` "
                                + "INNER JOIN hall h ON c.`hall`=h.`hallno` WHERE c.`classcode`='"
                                + rs.getString("classcode") + "'");
                        if (rs_second.next()) {
                            v.add(rs.getString("classcode"));
                            v.add(rs_second.getString("grade"));
                            v.add(rs_second.getString("s.name"));
                            v.add(rs_second.getString("ct.type"));
                            v.add(rs_second.getString("t.fname") + " " + rs_second.getString("t.lname"));
                            v.add(rs_second.getString("classday"));
                            v.add(rs_second.getString("starttime").substring(0, 5));
                            v.add(rs_second.getString("endtime").substring(0, 5));
                            v.add(rs_second.getString("h.hallname"));
                            v.add(rs_second.getString("c.fee"));
                            dtm.addRow(v);
                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Select class days", "", 
                            JOptionPane.WARNING_MESSAGE, design.getWarningIcon());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void combo_subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_subjectActionPerformed
        loadTeachers();
    }//GEN-LAST:event_combo_subjectActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Home.schedule = null;
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClassSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClassSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClassSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClassSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClassSchedule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox check_10;
    private javax.swing.JCheckBox check_11;
    private javax.swing.JCheckBox check_6;
    private javax.swing.JCheckBox check_7;
    private javax.swing.JCheckBox check_8;
    private javax.swing.JCheckBox check_9;
    private javax.swing.JCheckBox check_friday;
    private javax.swing.JCheckBox check_monday;
    private javax.swing.JCheckBox check_saturday;
    private javax.swing.JCheckBox check_sunday;
    private javax.swing.JCheckBox check_thursday;
    private javax.swing.JCheckBox check_tuesday;
    private javax.swing.JCheckBox check_wednesday;
    private javax.swing.JComboBox<String> combo_subject;
    private javax.swing.JComboBox<String> combo_teacher;
    private lu.tudor.santec.jtimechooser.JTimeChooser endtime;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JRadioButton rad_clsdetail;
    private javax.swing.JRadioButton rad_timerange;
    private lu.tudor.santec.jtimechooser.JTimeChooser starttime;
    // End of variables declaration//GEN-END:variables

    private void loadSubject() {
        try {
            ResultSet rs = DB.search("SELECT * FROM subject");
            Vector v = new Vector();
            while (rs.next()) {
                String subject = rs.getString("id") + "-" + rs.getString("name");
                v.add(subject);
            }
            combo_subject.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadTeachers() {
        try {
            String subject = combo_subject.getSelectedItem().toString().split("-")[0];
            Vector v = new Vector();
            ResultSet rs = DB.search("SELECT `nic`,`fname`,`lname` FROM teacher WHERE `nic` IN"
                    + " (SELECT `teacher` FROM teacher_subject WHERE `subject`='" + subject + "')");
            while (rs.next()) {
                String teacher = rs.getString("nic") + "-" + rs.getString("fname") + " " + rs.getString("lname");
                v.add(teacher);
            }
            combo_teacher.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
