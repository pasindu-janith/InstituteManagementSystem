/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package institute_management;

import com.institute.common.DateAndTime;
import com.institute.db.DB;
import java.awt.Color;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author pasindu hathurushigh
 */
public class Attendance extends javax.swing.JFrame {

    private Design design;

    /**
     * Creates new form Attendance
     */
    public Attendance() {
        initComponents();
        loadSubject();
        loadTeacher();
        loadClassType();
        generateAttendanceId();
        design = new Design();
        this.setIconImage(design.getIconImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        combo_grade = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        combo_subject = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        combo_teacher = new javax.swing.JComboBox<>();
        txt_classcode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        combo_classtype = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txt_attendanceid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_studentid = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_studcount = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        txt_studentname = new javax.swing.JTextField();
        txt_paymentstatus = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Attendance");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("    STUDENT ATTENDANCE");
        jLabel1.setOpaque(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Class", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12))); // NOI18N

        combo_grade.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        combo_grade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "6", "7", "8", "9", "10", "11", "" }));

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel7.setText("Subject");

        combo_subject.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        combo_subject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_subjectActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel6.setText("Grade");

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel8.setText("Teacher");

        combo_teacher.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        combo_teacher.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txt_classcode.setEditable(false);
        txt_classcode.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txt_classcode.setForeground(new java.awt.Color(0, 51, 153));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Class code");

        jButton1.setBackground(new java.awt.Color(0, 102, 153));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Get class");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusPainted(false);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel5.setText("Class Type");

        combo_classtype.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_classtype, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_classcode, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo_subject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo_teacher, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(47, 47, 47))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(combo_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_subject, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(combo_teacher, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(combo_classtype, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_classcode, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel10.setText("Attendance ID");

        txt_attendanceid.setEditable(false);
        txt_attendanceid.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Student ID");

        txt_studentid.setEditable(false);
        txt_studentid.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txt_studentid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_studentidActionPerformed(evt);
            }
        });
        txt_studentid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_studentidKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel11.setText("Attend Students");

        txt_studcount.setEditable(false);
        txt_studcount.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jList1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jScrollPane1.setViewportView(jList1);

        txt_studentname.setEditable(false);
        txt_studentname.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        txt_paymentstatus.setEditable(false);
        txt_paymentstatus.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Class payment status");

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setText("Student Name");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_studentname)
                                    .addComponent(txt_studentid)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_attendanceid, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_paymentstatus)))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_studcount, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(33, 33, 33))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(txt_attendanceid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_studcount, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_studentid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txt_studentname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_paymentstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void combo_subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_subjectActionPerformed
        loadTeacher();
    }//GEN-LAST:event_combo_subjectActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            generateAttendanceId();
            if(combo_teacher.getSelectedItem() != null){
            ResultSet rs = DB.search("SELECT `classcode`,`classday` FROM class WHERE `subject`='"
                    + combo_subject.getSelectedItem().toString().split("-")[0] + "' AND `teacher`='"
                    + combo_teacher.getSelectedItem().toString().split("-")[0] + "' AND `grade`='"
                    + combo_grade.getSelectedItem().toString() + "' AND `classtype`='"
                    + combo_classtype.getSelectedItem().toString().split("-")[0] + "' AND `status`='1'");
            if (rs.next()) {
                txt_classcode.setForeground(Color.BLACK);
                txt_classcode.setText(rs.getString("classcode"));
                int ConfirmOption = JOptionPane.NO_OPTION;
                if (!rs.getString("classday").equalsIgnoreCase(DateAndTime.getDateInWord())) {
                    ConfirmOption = JOptionPane.showConfirmDialog(this, "This class is held on " 
                            + rs.getString("classday") + ". Are you sure to continue?",
                            "Class day confirmation", JOptionPane.YES_NO_OPTION, 
                            JOptionPane.QUESTION_MESSAGE, design.getQuestionIcon());
                }
                if (rs.getString("classday").equalsIgnoreCase(DateAndTime.getDateInWord())
                        || ConfirmOption == JOptionPane.YES_OPTION) {
                    ResultSet rs_id = DB.search("SELECT `id` FROM attendance WHERE `classcode`='"
                            + rs.getString("classcode") + "' AND `date`='" + DateAndTime.getDate() + "'");
                    if (rs_id.next()) {
                        txt_attendanceid.setText(rs_id.getString("id"));
                    } else {
                        DB.push("INSERT INTO attendance VALUES('"
                                + txt_attendanceid.getText() + "','"
                                + txt_classcode.getText() + "','"
                                + DateAndTime.getDate() + "')");
                    }
                    txt_studentid.setEditable(true);
                    txt_studentid.grabFocus();
                    calculateStudentCount();
                }
            } else {
                txt_classcode.setForeground(Color.RED);
                txt_classcode.setEditable(false);
                txt_classcode.setText("NO CLASS");
            }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_studentidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_studentidActionPerformed
        try {
            if (!txt_studentid.getText().equals("") && txt_studentid.getText() != null) {
                ResultSet rs = DB.search("SELECT * FROM student WHERE `studentid`="
                        + "(SELECT `studentid` FROM student_class WHERE `classcode`='"
                        + txt_classcode.getText() + "' AND `studentid`='" 
                        + txt_studentid.getText() + "' AND `status`='1')");
                if (rs.next()) {
                    txt_studentname.setForeground(Color.BLACK);
                    txt_studentname.setText(rs.getString("fname") + " " + rs.getString("lname"));
                    rs = DB.search("SELECT * FROM invoice_class p INNER JOIN "
                            + "invoice i ON p.`invoiceid`=i.`invoiceid` WHERE i.`studentid`='"
                            + txt_studentid.getText() + "' AND p.`classcode`='"
                            + txt_classcode.getText() + "' AND p.`paymentmonth`='"
                            + DateAndTime.getYearMonth() + "'");
                    if (rs.next()) {
                        txt_paymentstatus.setForeground(new Color(0, 100, 0));
                        txt_paymentstatus.setText("PAID");
                    } else {
                        txt_paymentstatus.setForeground(Color.RED);
                        txt_paymentstatus.setText("NOT PAID");
                    }//meke attendance mark kiyana eke _ eka ain karanna
                    try {
                        DB.push("INSERT INTO attendance_mark VALUES('"
                                + txt_attendanceid.getText() + "','"
                                + txt_studentid.getText() + "','"
                                + DateAndTime.getDateTime() + "')");
                    } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                        JOptionPane.showMessageDialog(this, "Duplicate Entry!");
                    }
                    rs = DB.search("SELECT `id`,`date` FROM attendance WHERE `date` LIKE '"
                            + DateAndTime.getYearMonth() + "%' AND `classcode`='"
                            + txt_classcode.getText() + "'");
                    Vector v = new Vector();
                    while (rs.next()) {
                        String attendanceStat = "";
                        ResultSet rs_stat = DB.search("SELECT * FROM attendance_mark WHERE `attendanceid`='"
                                + rs.getString("id") + "' AND `studentid`='" + txt_studentid.getText() + "'");
                        if (rs_stat.next()) {
                            attendanceStat = "PRESENT";
                        } else {
                            attendanceStat = "ABSENT";
                        }
                        String attendanceDetail = rs.getString("date") + " ---> " + attendanceStat;
                        v.add(attendanceDetail);
                    }
                    jList1.setListData(v);
                    calculateStudentCount();
                } else {
                    txt_studentname.setForeground(Color.RED);
                    txt_studentname.setText("NO REGISTERED STUDENT");
                    txt_paymentstatus.setText(null);
                    jList1.setListData(new String[0]);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txt_studentidActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (Home.attendance1 == this && Home.attendance1 != null) {
            this.dispose();
            Home.attendance1 = null;
        } else if (Home.attendance2 == this && Home.attendance2 != null) {
            this.dispose();
            Home.attendance2 = null;
        }
    }//GEN-LAST:event_formWindowClosing

    private void txt_studentidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_studentidKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_studentidKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Attendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combo_classtype;
    private javax.swing.JComboBox<String> combo_grade;
    private javax.swing.JComboBox<String> combo_subject;
    private javax.swing.JComboBox<String> combo_teacher;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_attendanceid;
    private javax.swing.JTextField txt_classcode;
    private javax.swing.JTextField txt_paymentstatus;
    private javax.swing.JTextField txt_studcount;
    private javax.swing.JTextField txt_studentid;
    private javax.swing.JTextField txt_studentname;
    // End of variables declaration//GEN-END:variables

    private void loadSubject() {
        try {
            ResultSet rs = DB.search("SELECT * FROM subject");
            Vector v = new Vector();
            while (rs.next()) {
                String subject = rs.getString("id") + "-" + rs.getString("name");
                v.add(subject);
            }
            combo_subject.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadTeacher() {
        try {
            String subject = combo_subject.getSelectedItem().toString().split("-")[0];
            Vector v = new Vector();
            ResultSet rs = DB.search("SELECT `nic`,`fname`,`lname` FROM teacher WHERE `nic` IN "
                    + "(SELECT `teacher` FROM teacher_subject WHERE `subject`='" + subject + "') AND `status`='1'");
            while (rs.next()) {
                String teacher = rs.getString("nic") + "-" + rs.getString("fname") + " " + rs.getString("lname");
                v.add(teacher);
            }
            combo_teacher.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generateAttendanceId() {
        try {
            ResultSet rs = DB.search("SELECT COUNT(id) AS idcount FROM attendance");
            if (rs.next()) {
                int count = rs.getInt("idcount");
                txt_attendanceid.setText("" + (++count));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadClassType() {
        try {
            ResultSet rs = DB.search("SELECT * FROM classtype");
            Vector v = new Vector();
            while (rs.next()) {
                String type = rs.getString("id") + "-" + rs.getString("type");
                v.add(type);
            }
            combo_classtype.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void calculateStudentCount() {
        try {
            ResultSet rs = DB.search("SELECT COUNT(*) AS studentcount FROM attendance_mark WHERE `attendanceid`='"
                    + txt_attendanceid.getText() + "'");
            if (rs.next()) {
                txt_studcount.setText(rs.getString("studentcount"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void loadGrades(){}
}
