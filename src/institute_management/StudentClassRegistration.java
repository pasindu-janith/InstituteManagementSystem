/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package institute_management;

import com.institute.common.DateAndTime;
import com.institute.db.DB;
import java.awt.Color;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pasindu hathurushigh
 */
public class StudentClassRegistration extends javax.swing.JFrame {

    private DefaultTableModel dtm;
    private final Design design;
    private ClassManagement clsMgt;

    /**
     * Creates new form StudentClassRegistration
     */
    public StudentClassRegistration() {
        initComponents();
        loadSubject();
        loadTeachers();
        loadClassType();
        dtm = (DefaultTableModel) jTable1.getModel();
        design.tableDesign(jTable1);
        setIconImage(design.getIconImage());
    }

    {
        design = new Design();
    }

    StudentClassRegistration(ClassManagement cmanage) {
        this();
        if (Home.classRegistration != null) {
            Home.classRegistration.dispose();
            Home.classRegistration = null;
        }
        this.clsMgt = cmanage;
        combo_grade.setSelectedItem(cmanage.combo_grade.getSelectedItem());
        combo_subject.setSelectedItem(cmanage.combo_subject.getSelectedItem());
        combo_teacher.setSelectedItem(cmanage.combo_teacher.getSelectedItem());
        combo_classtype.setSelectedItem(cmanage.combo_classtype.getSelectedItem());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txt_studentid = new javax.swing.JTextField();
        txt_studentname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_class = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        combo_grade = new javax.swing.JComboBox<>();
        combo_subject = new javax.swing.JComboBox<>();
        combo_teacher = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        combo_classtype = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Student Class Registration");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("    STUDENT CLASS REGISTRATION");
        jLabel1.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Student ID");

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Search Student");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusPainted(false);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txt_studentid.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        txt_studentid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_studentidActionPerformed(evt);
            }
        });
        txt_studentid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_studentidKeyTyped(evt);
            }
        });

        txt_studentname.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Student Name");

        jButton2.setBackground(new java.awt.Color(0, 153, 51));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/institute/images/addicon.png"))); // NOI18N
        jButton2.setText("Add to class");
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setFocusPainted(false);
        jButton2.setOpaque(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        list_class.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        jScrollPane1.setViewportView(list_class);

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Registered Classes");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Class Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 13))); // NOI18N

        combo_grade.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        combo_grade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "6", "7", "8", "9", "10", "11" }));
        combo_grade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_gradeActionPerformed(evt);
            }
        });

        combo_subject.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        combo_subject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_subjectActionPerformed(evt);
            }
        });

        combo_teacher.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        combo_teacher.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_teacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_teacherActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Grade");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setText("Subject");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("Teacher");

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setText("ClassType");

        combo_classtype.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        combo_classtype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_classtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_classtypeActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setText("Registered Students");

        jTable1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Student Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(20);
        jScrollPane3.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(combo_classtype, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_teacher, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo_subject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo_grade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_grade, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_subject, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(combo_teacher, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(combo_classtype, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        jButton3.setBackground(new java.awt.Color(204, 0, 0));
        jButton3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/institute/images/removeicon.png"))); // NOI18N
        jButton3.setText("Drop student from class");
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setFocusPainted(false);
        jButton3.setOpaque(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_studentid, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                .addGap(31, 31, 31)
                                .addComponent(jButton1)
                                .addGap(1, 1, 1))
                            .addComponent(txt_studentname, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_studentid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_studentname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(24, 24, 24)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(27, 27, 27))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        StudentSearch s = new StudentSearch(this);
        s.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_studentidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_studentidActionPerformed
        if (!txt_studentid.getText().equals("")) {
            try {
                ResultSet rs = DB.search("SELECT `fname`,`lname` FROM student WHERE `studentid`='"
                        + txt_studentid.getText() + "' AND `status`='1'");
                if (rs.next()) {
                    txt_studentname.setForeground(Color.BLACK);
                    txt_studentname.setText(rs.getString("fname") + " " + rs.getString("lname"));
                    rs = DB.search("SELECT `classcode` FROM student_class WHERE `studentid`='"
                            + txt_studentid.getText() + "' AND `status`='1'");
                    Vector v = new Vector();
                    while (rs.next()) {
                        ResultSet rs_class = DB.search("SELECT * FROM class c "
                                + "INNER JOIN teacher t ON c.`teacher`=t.`nic` "
                                + "INNER JOIN subject s ON c.`subject`=s.`id` "
                                + "INNER JOIN classtype ct ON c.`classtype`=ct.`id` "
                                + "WHERE c.`classcode`='" + rs.getString("classcode") + "'");
                        if (rs_class.next()) {
                            String cls = rs.getString("classcode") + "-" + "GRADE "
                                    + rs_class.getString("c.grade") + " " + rs_class.getString("s.name") + " "
                                    + rs_class.getString("ct.type") + " - "
                                    + rs_class.getString("t.fname") + " " + rs_class.getString("t.lname");
                            v.add(cls);
                        }
                    }
                    list_class.setListData(v);
                } else {
                    txt_studentname.setForeground(Color.RED);
                    txt_studentname.setText("No registered Student");
                    list_class.setListData(new String[0]);
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_txt_studentidActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!txt_studentid.getText().equals("")) {
            try {
                ResultSet rs = DB.search("SELECT * FROM class WHERE `teacher`='"
                        + combo_teacher.getSelectedItem().toString().split("-")[0] + "' AND `grade`='"
                        + combo_grade.getSelectedItem().toString() + "' AND subject='"
                        + combo_subject.getSelectedItem().toString().split("-")[0] + "' AND `classtype`='"
                        + combo_classtype.getSelectedItem().toString().split("-")[0] + "'");
                if (rs.next()) {
                    int confirmOption = JOptionPane.showConfirmDialog(this, 
                            "Are you sure to add this student to this class",
                            "Student Class Registration", JOptionPane.YES_NO_OPTION, 
                            JOptionPane.QUESTION_MESSAGE, design.getQuestionIcon());
                    if (confirmOption == JOptionPane.YES_OPTION) {
                        try {
                            DB.push("INSERT INTO student_class VALUES('"
                                    + txt_studentid.getText() + "','"
                                    + rs.getString("classcode") + "','"
                                    + DateAndTime.getDate() + "','1')");
                            txt_studentid.postActionEvent();
                        } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                            DB.push("UPDATE student_class SET `status`='1' WHERE `studentid`='"
                                    + txt_studentid.getText() + "' AND `classcode`='"
                                    + rs.getString("classcode") + "'");
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        JOptionPane.showMessageDialog(this, "Student added to the class successfully!", "",
                                JOptionPane.PLAIN_MESSAGE, design.getSuccessIcon());
                        txt_studentid.postActionEvent();
                        combo_classtype.setSelectedItem(combo_classtype.getSelectedItem());
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No class from this details", "",
                            JOptionPane.WARNING_MESSAGE, design.getWarningIcon());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Enter valid student ID", "",
                    JOptionPane.WARNING_MESSAGE, design.getWarningIcon());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void combo_subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_subjectActionPerformed
        loadTeachers();
        combo_classtype.setSelectedIndex(combo_classtype.getSelectedIndex());
    }//GEN-LAST:event_combo_subjectActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (!list_class.isSelectionEmpty()) {
            String classcode = list_class.getSelectedValue().split("-")[0];
            try {
                int confirmOption = JOptionPane.showConfirmDialog(this,
                        "Are you sure remove this student from this class?", "Remove Student",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, design.getQuestionIcon());
                if (confirmOption == JOptionPane.YES_OPTION) {
                    DB.push("UPDATE student_class SET `status`='0' WHERE `studentid`='"
                            + txt_studentid.getText() + "' AND `classcode`='" + classcode + "'");
                    txt_studentid.postActionEvent();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Select Class to drop student", "",
                    JOptionPane.PLAIN_MESSAGE, design.getWarningIcon());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (Home.classRegistration != null) {
            Home.classRegistration = null;
        } else {
            clsMgt.studClsReg = null;
            clsMgt.setEnabled(true);
        }
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void txt_studentidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_studentidKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_studentidKeyTyped

    private void combo_classtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_classtypeActionPerformed
        dtm.setRowCount(0);
        if (combo_teacher.getSelectedItem() != null) {
            try {
                ResultSet rs = DB.search("SELECT `classcode` FROM class WHERE `teacher`='"
                        + combo_teacher.getSelectedItem().toString().split("-")[0] + "' AND `grade`='"
                        + combo_grade.getSelectedItem().toString() + "' AND `subject`='"
                        + combo_subject.getSelectedItem().toString().split("-")[0] + "' AND `classtype`='"
                        + combo_classtype.getSelectedItem().toString().split("-")[0] + "'");
                if (rs.next()) {
                    ResultSet rs_class = DB.search("SELECT * FROM student_class sc "
                            + "INNER JOIN student s ON sc.`studentid`=s.`studentid` WHERE sc.`classcode`='"
                            + rs.getString("classcode") + "' AND sc.`status`='1'");
                    while (rs_class.next()) {
                        Vector v = new Vector();
                        v.add(rs_class.getString("studentid"));
                        v.add(rs_class.getString("fname") + " " + rs_class.getString("lname"));
                        dtm.addRow(v);

                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_combo_classtypeActionPerformed

    private void combo_teacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_teacherActionPerformed
        combo_classtype.setSelectedIndex(0);
    }//GEN-LAST:event_combo_teacherActionPerformed

    private void combo_gradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_gradeActionPerformed
        combo_classtype.setSelectedIndex(combo_classtype.getSelectedIndex());
    }//GEN-LAST:event_combo_gradeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentClassRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentClassRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentClassRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentClassRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentClassRegistration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combo_classtype;
    private javax.swing.JComboBox<String> combo_grade;
    private javax.swing.JComboBox<String> combo_subject;
    private javax.swing.JComboBox<String> combo_teacher;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JList<String> list_class;
    javax.swing.JTextField txt_studentid;
    private javax.swing.JTextField txt_studentname;
    // End of variables declaration//GEN-END:variables

    private void loadTeachers() {
        try {
            String subject = combo_subject.getSelectedItem().toString().split("-")[0];
            Vector v = new Vector();
            ResultSet rs = DB.search("SELECT `nic`,`fname`,`lname` FROM teacher WHERE `nic` in "
                    + "(SELECT `teacher` FROM teacher_subject WHERE `subject`='" + subject + "') AND `status`='1'");
            while (rs.next()) {
                String teacher = rs.getString("nic") + "-" + rs.getString("fname") + " " + rs.getString("lname");
                v.add(teacher);
            }
            combo_teacher.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadSubject() {
        try {
            ResultSet rs = DB.search("SELECT * FROM subject");
            Vector v = new Vector();
            while (rs.next()) {
                String subject = rs.getString("id") + "-" + rs.getString("name");
                v.add(subject);
            }
            combo_subject.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadClassType() {
        try {
            ResultSet rs = DB.search("SELECT * FROM classtype");
            Vector v = new Vector();
            while (rs.next()) {
                String type = rs.getString("id") + "-" + rs.getString("type");
                v.add(type);
            }
            combo_classtype.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
