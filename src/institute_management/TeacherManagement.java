/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package institute_management;

import com.institute.common.EmailValidation;
import com.institute.db.DB;
import java.awt.Color;
import java.sql.Date;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.border.BevelBorder;
import javax.swing.border.LineBorder;

/**
 *
 * @author pasindu hathurushigh
 */
public class TeacherManagement extends javax.swing.JFrame {

    SimpleDateFormat sdf;
    Vector v;
    private Design design;

    /**
     * Creates new form TeacherManagement
     */
    public TeacherManagement() {
        initComponents();
        loadSubject();
        setIconImage(design.getIconImage());
    }

    {
        sdf = new SimpleDateFormat("yyyy-MM-dd");
        v = new Vector();
        design = new Design();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_nic = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        combo_title = new javax.swing.JComboBox<>();
        txt_fname = new javax.swing.JTextField();
        txt_lname = new javax.swing.JTextField();
        txt_addline1 = new javax.swing.JTextField();
        txt_addline2 = new javax.swing.JTextField();
        txt_addline3 = new javax.swing.JTextField();
        txt_contact1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txt_contact2 = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        rad_female = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        rad_active = new javax.swing.JRadioButton();
        rad_inactive = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        combo_subject = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_subject = new javax.swing.JList<>();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        rad_male = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        txt_qualification = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Teacher Management");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeOperation(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 102, 153));
        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("   TEACHER");
        jLabel1.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Teacher NIC");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("First Name");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Last Name");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Date of Birth");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setText("Address Line1");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("E-mail");

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setText("Address Line2");

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setText("Address Line3");

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel10.setText("Contact Number");

        txt_nic.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel11.setText("Title");

        combo_title.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        combo_title.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Ms.", "Mrs.", "Rel.", "Dr." }));

        txt_fname.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        txt_lname.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        txt_addline1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        txt_addline2.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        txt_addline3.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        txt_contact1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txt_contact1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_contact1KeyTyped(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 0));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/institute/images/saveicon.png"))); // NOI18N
        jButton1.setText("Save");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusPainted(false);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 102, 0));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/institute/images/updateicon.png"))); // NOI18N
        jButton2.setText("Update");
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setFocusPainted(false);
        jButton2.setOpaque(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 102, 204));
        jButton3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/institute/images/searchicon.png"))); // NOI18N
        jButton3.setText("Search");
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setFocusPainted(false);
        jButton3.setOpaque(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(204, 0, 0));
        jButton4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/institute/images/deleteicon.png"))); // NOI18N
        jButton4.setText("Delete");
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.setFocusPainted(false);
        jButton4.setOpaque(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txt_contact2.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txt_contact2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_contact2KeyTyped(evt);
            }
        });

        txt_email.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        jDateChooser1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        buttonGroup1.add(rad_female);
        rad_female.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        rad_female.setText("Female");
        rad_female.setFocusPainted(false);

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel12.setText("Gender");

        jLabel13.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel13.setText("Status");

        buttonGroup2.add(rad_active);
        rad_active.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        rad_active.setSelected(true);
        rad_active.setText("Active");
        rad_active.setFocusPainted(false);

        buttonGroup2.add(rad_inactive);
        rad_inactive.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        rad_inactive.setText("Inactive");
        rad_inactive.setFocusPainted(false);

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel14.setText("Subject");

        combo_subject.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        list_subject.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jScrollPane1.setViewportView(list_subject);

        jButton5.setBackground(new java.awt.Color(51, 51, 51));
        jButton5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText(">");
        jButton5.setContentAreaFilled(false);
        jButton5.setFocusPainted(false);
        jButton5.setOpaque(true);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(51, 51, 51));
        jButton6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("<");
        jButton6.setContentAreaFilled(false);
        jButton6.setFocusPainted(false);
        jButton6.setOpaque(true);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rad_male);
        rad_male.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        rad_male.setSelected(true);
        rad_male.setText("Male");
        rad_male.setFocusPainted(false);

        jLabel15.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel15.setText("Qualification");

        txt_qualification.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N

        jLabel16.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel16.setText("Subject List");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9))
                            .addGap(21, 21, 21)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txt_addline1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_addline2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_addline3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(txt_nic, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                                .addComponent(txt_fname, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addGap(33, 33, 33)))
                                    .addGap(13, 13, 13)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addComponent(jLabel12)
                                            .addGap(18, 18, 18)
                                            .addComponent(rad_male)
                                            .addGap(23, 23, 23)
                                            .addComponent(rad_female)
                                            .addGap(30, 30, 30))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel11))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(combo_title, 0, 75, Short.MAX_VALUE)
                                                    .addGap(132, 132, 132))
                                                .addComponent(txt_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel7)
                                .addComponent(jLabel13)
                                .addComponent(jLabel14))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(rad_active)
                                    .addGap(41, 41, 41)
                                    .addComponent(rad_inactive))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txt_contact1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                                    .addGap(27, 27, 27)
                                    .addComponent(txt_contact2, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                                .addComponent(txt_qualification)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txt_email, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(combo_subject, javax.swing.GroupLayout.Alignment.LEADING, 0, 399, Short.MAX_VALUE))
                                    .addGap(14, 14, 14)
                                    .addComponent(jButton5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton6)))))
                    .addComponent(jLabel15))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jScrollPane1))
                        .addGap(59, 59, 59))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txt_nic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(combo_title, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txt_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rad_female)
                                .addComponent(jLabel12)
                                .addComponent(rad_male)))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txt_addline1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txt_addline2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txt_addline3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txt_contact1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_contact2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(combo_subject, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txt_qualification, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(rad_active)
                            .addComponent(rad_inactive)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!txt_nic.getText().equals("") && txt_nic.getText() != null
                && !txt_fname.getText().equals("") && txt_fname.getText() != null
                && !txt_lname.getText().equals("") && txt_lname.getText() != null
                && !txt_addline1.getText().equals("") && txt_addline1.getText() != null
                && !txt_addline2.getText().equals("") && txt_addline2.getText() != null
                && !txt_contact1.getText().equals("") && txt_contact1.getText() != null
                && !txt_email.getText().equals("") && txt_email.getText() != null
                && jDateChooser1.getDate() != null) {
            if (EmailValidation.validate(txt_email.getText())) {
                txt_email.setBorder(new BevelBorder(1));
                try {
                    String gender = (rad_male.isSelected()) ? "MALE" : "FEMALE";
                    int status = (rad_active.isSelected()) ? 1 : 0;
                    DB.push("INSERT INTO address(`address_line1`,`address_line2`,`address_line3`) VALUES('"
                            + txt_addline1.getText().toUpperCase().trim() + "','"
                            + txt_addline2.getText().toUpperCase().trim() + "','"
                            + txt_addline3.getText().toUpperCase().trim() + "')");
                    ResultSet rs = DB.search("SELECT id FROM address WHERE `address_line1`='"
                            + txt_addline1.getText().trim() + "' AND `address_line2`='"
                            + txt_addline2.getText().trim() + "' AND `address_line3`='"
                            + txt_addline3.getText().trim() + "'");
                    if (rs.next()) {
                        DB.push("INSERT INTO teacher VALUES('"
                                + txt_nic.getText().trim() + "','"
                                + txt_fname.getText().toUpperCase().trim() + "','"
                                + txt_lname.getText().toUpperCase().trim() + "','"
                                + combo_title.getSelectedItem().toString() + "','"
                                + sdf.format(jDateChooser1.getDate()) + "','"
                                + gender + "','"
                                + rs.getString("id") + "','"
                                + txt_contact1.getText().trim() + "','"
                                + txt_contact2.getText().trim() + "','"
                                + txt_email.getText().trim() + "','"
                                + txt_qualification.getText().trim() + "','"
                                + status + "')");
                        for (Object subject : v) {
                            String subjectId = subject.toString().split("-")[0];
                            DB.push("INSERT INTO teacher_subject VALUES('"
                                    + txt_nic.getText().trim() + "','"
                                    + subjectId + "','1')");
                        }                        
                        JOptionPane.showMessageDialog(this, "Teacher Registered successfully!",
                                "Success", JOptionPane.PLAIN_MESSAGE, design.getSuccessIcon());
                        clearFields();
                    }
                } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                    JOptionPane.showMessageDialog(this, "A teacher already registered from this NIC!",
                            "Error", JOptionPane.ERROR_MESSAGE, design.getErrorIcon());
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                txt_email.setBorder(new LineBorder(Color.RED));
                txt_email.grabFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fill all mandatory fields!",
                    "", JOptionPane.PLAIN_MESSAGE, design.getWarningIcon());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_contact1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_contact1KeyTyped
        if (!Character.isDigit(evt.getKeyChar())|| txt_contact1.getText().length()>9) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_contact1KeyTyped

    private void txt_contact2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_contact2KeyTyped
        if (!Character.isDigit(evt.getKeyChar())|| txt_contact2.getText().length()>9) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_contact2KeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        loadSubject();
        if (!txt_nic.getText().equals("")) {
            try {
                ResultSet rs = DB.search("SELECT * FROM teacher t INNER JOIN "
                        + "address a ON t.`address`=a.`id` WHERE t.`nic`='"
                        + txt_nic.getText() + "'");
                if (rs.next()) {
                    txt_fname.setText(rs.getString("fname"));
                    txt_lname.setText(rs.getString("lname"));
                    combo_title.setSelectedItem(rs.getString("title"));
                    txt_contact1.setText(rs.getString("contactno1"));
                    txt_contact2.setText(rs.getString("contactno1"));
                    txt_email.setText(rs.getString("email"));
                    txt_addline1.setText(rs.getString("a.address_line1"));
                    txt_addline2.setText(rs.getString("a.address_line2"));
                    txt_addline3.setText(rs.getString("a.address_line3"));
                    txt_qualification.setText(rs.getString("qualification"));
                    jDateChooser1.setDate(Date.valueOf(rs.getString("dob")));
                    ResultSet rssub = DB.search("SELECT * FROM teacher_subject ts INNER JOIN"
                            + " subject s ON ts.subject=s.id WHERE ts.teacher='" + txt_nic.getText() + "'");
                    v = new Vector();
                    while (rssub.next()) {
                        String subject = rssub.getString("s.id") + "-" + rssub.getString("s.name");
                        v.add(subject);
                        combo_subject.removeItem(subject);
                    }
                    list_subject.setListData(v);
                    if (rs.getString("gender").equals("MALE")) {
                        rad_male.setSelected(true);
                    } else {
                        rad_female.setSelected(true);
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(this, "No registered teacher form this NIC",
                            "", JOptionPane.PLAIN_MESSAGE, design.getWarningIcon());
                    clearFields();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Enter NIC to search",
                    "", JOptionPane.PLAIN_MESSAGE, design.getWarningIcon());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (combo_subject.getSelectedItem() != null) {
            String subject = combo_subject.getSelectedItem().toString();
            v.add(subject);
            combo_subject.removeItem(subject);
            list_subject.setListData(v);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (!list_subject.isSelectionEmpty()) {
            String subject = list_subject.getSelectedValue();
            v.remove(subject);
            combo_subject.addItem(subject);
            list_subject.setModel(new DefaultComboBoxModel<>(v));
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!txt_nic.getText().equals("") && txt_nic.getText() != null
                && !txt_fname.getText().equals("") && txt_fname.getText() != null
                && !txt_lname.getText().equals("") && txt_lname.getText() != null
                && !txt_addline1.getText().equals("") && txt_addline1.getText() != null
                && !txt_addline2.getText().equals("") && txt_addline2.getText() != null
                && !txt_contact1.getText().equals("") && txt_contact1.getText() != null
                && !txt_email.getText().equals("") && txt_email.getText() != null
                && jDateChooser1.getDate() != null) {
            try {
                String gender = (rad_male.isSelected()) ? "MALE" : "FEMALE";
                int status = (rad_active.isSelected()) ? 1 : 0;
                ResultSet rs = DB.search("SELECT `address` FROM teacher WHERE `nic`='"
                        + txt_nic.getText().trim() + "'");
                if (rs.next()) {
                    DB.push("UPDATE address SET `address_line1`='"
                            + txt_addline1.getText() + "',`address_line2`='"
                            + txt_addline2.getText() + "',`address_line3`='"
                            + txt_addline3.getText() + "' WHERE `id`='"
                            + rs.getString("address") + "'");
                    DB.push("UPDATE teacher SET `fname`='"
                            + txt_fname.getText().toUpperCase().trim() + "',`lname`='"
                            + txt_lname.getText().toUpperCase().trim() + "',`title`='"
                            + combo_title.getSelectedItem().toString() + "',`dob`='"
                            + sdf.format(jDateChooser1.getDate()) + "',`contactno1`='"
                            + txt_contact1.getText().trim() + "',`contactno2`='"
                            + txt_contact2.getText().trim() + "',`email`='"
                            + txt_email.getText() + "',`gender`='"
                            + gender + "',`qualification`='"
                            + txt_qualification.getText().trim() + "',`status`='"
                            + status + "' WHERE `nic`='" + txt_nic.getText().trim() + "'");
                    DB.push("UPDATE teacher_subject SET `status`='0' WHERE `teacher`='"+txt_nic.getText()+"'");
                    for (Object subject : v) {
                        String subjectId = subject.toString().split("-")[0];
                        try {                            
                            DB.push("INSERT INTO teacher_subject VALUES('"
                                    + txt_nic.getText().trim() + "','"
                                    + subjectId + "','1')");
                        } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                            DB.push("UPDATE teacher_subject SET `status`='1' WHERE `teacher`='"+
                                    txt_nic.getText()+"' AND `subject`='"+
                                    subjectId+"'");
                        }
                    }
                    JOptionPane.showMessageDialog(this, "Teacher updated successfully!",
                            "Success", JOptionPane.PLAIN_MESSAGE, design.getSuccessIcon());
                } else {
                    JOptionPane.showMessageDialog(this,
                            "No registered teacher from this NIC. Register teacher first!",
                            "", JOptionPane.WARNING_MESSAGE, design.getWarningIcon());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            JOptionPane.showMessageDialog(this, "Fill all mandatory fields!",
                    "Error", JOptionPane.PLAIN_MESSAGE, design.getWarningIcon());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            if (!txt_nic.getText().equals("")) {
                ResultSet rs = DB.search("SELECT `nic`,`fname`,`lname` FROM teacher WHERE"
                        + " `nic`='" + txt_nic.getText() + "'");
                if (rs.next()) {
                    int confirmOption = JOptionPane.showConfirmDialog(this,
                            "Are you sure delete this teacher in "
                            + txt_nic.getText() + "-" + rs.getString("fname") + " " + rs.getString("lname") + "?",
                            "Delete teacher", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                            design.getQuestionIcon());
                    if (confirmOption == JOptionPane.YES_OPTION) {
                        DB.push("UPDATE teacher SET `status`='0' WHERE `nic`='" + txt_nic.getText().trim() + "'");
                        clearFields();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No registered teacher from this NIC!",
                            "", JOptionPane.ERROR_MESSAGE, design.getErrorIcon());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Enter NIC to delete",
                        "", JOptionPane.WARNING_MESSAGE, design.getWarningIcon());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void closeOperation(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeOperation
        this.dispose();
        Home.tmanage = null;
    }//GEN-LAST:event_closeOperation

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> combo_subject;
    private javax.swing.JComboBox<String> combo_title;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> list_subject;
    private javax.swing.JRadioButton rad_active;
    private javax.swing.JRadioButton rad_female;
    private javax.swing.JRadioButton rad_inactive;
    private javax.swing.JRadioButton rad_male;
    private javax.swing.JTextField txt_addline1;
    private javax.swing.JTextField txt_addline2;
    private javax.swing.JTextField txt_addline3;
    private javax.swing.JTextField txt_contact1;
    private javax.swing.JTextField txt_contact2;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_fname;
    private javax.swing.JTextField txt_lname;
    private javax.swing.JTextField txt_nic;
    private javax.swing.JTextField txt_qualification;
    // End of variables declaration//GEN-END:variables

    private void loadSubject() {
        try {
            ResultSet rs = DB.search("SELECT * FROM subject");
            Vector vsub = new Vector();
            while (rs.next()) {
                String subject = rs.getString("id") + "-" + rs.getString("name");
                vsub.add(subject);
            }
            combo_subject.setModel(new DefaultComboBoxModel(vsub));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clearFields() {
        txt_nic.setText(null);
        txt_fname.setText(null);
        txt_lname.setText(null);
        txt_addline1.setText(null);
        txt_addline2.setText(null);
        txt_addline3.setText(null);
        txt_contact1.setText(null);
        txt_contact2.setText(null);
        txt_email.setText(null);
        txt_qualification.setText(null);
        rad_active.setSelected(true);
        rad_male.setSelected(true);
        loadSubject();
        v.removeAllElements();
        jDateChooser1.setDate(null);
        list_subject.setListData(v);
    }
}
